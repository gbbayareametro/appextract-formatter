import { ExceptionOptionType as __ExceptionOptionType } from "@smithy/smithy-client";
import { AthenaServiceException as __BaseException } from "./AthenaServiceException";
export declare const S3AclOption: {
  readonly BUCKET_OWNER_FULL_CONTROL: "BUCKET_OWNER_FULL_CONTROL";
};
export type S3AclOption = (typeof S3AclOption)[keyof typeof S3AclOption];
export interface AclConfiguration {
  S3AclOption: S3AclOption | undefined;
}
export interface BatchGetNamedQueryInput {
  NamedQueryIds: string[] | undefined;
}
export interface NamedQuery {
  Name: string | undefined;
  Description?: string | undefined;
  Database: string | undefined;
  QueryString: string | undefined;
  NamedQueryId?: string | undefined;
  WorkGroup?: string | undefined;
}
export interface UnprocessedNamedQueryId {
  NamedQueryId?: string | undefined;
  ErrorCode?: string | undefined;
  ErrorMessage?: string | undefined;
}
export interface BatchGetNamedQueryOutput {
  NamedQueries?: NamedQuery[] | undefined;
  UnprocessedNamedQueryIds?: UnprocessedNamedQueryId[] | undefined;
}
export declare class InternalServerException extends __BaseException {
  readonly name: "InternalServerException";
  readonly $fault: "server";
  Message?: string | undefined;
  constructor(
    opts: __ExceptionOptionType<InternalServerException, __BaseException>
  );
}
export declare class InvalidRequestException extends __BaseException {
  readonly name: "InvalidRequestException";
  readonly $fault: "client";
  AthenaErrorCode?: string | undefined;
  Message?: string | undefined;
  constructor(
    opts: __ExceptionOptionType<InvalidRequestException, __BaseException>
  );
}
export interface BatchGetPreparedStatementInput {
  PreparedStatementNames: string[] | undefined;
  WorkGroup: string | undefined;
}
export interface PreparedStatement {
  StatementName?: string | undefined;
  QueryStatement?: string | undefined;
  WorkGroupName?: string | undefined;
  Description?: string | undefined;
  LastModifiedTime?: Date | undefined;
}
export interface UnprocessedPreparedStatementName {
  StatementName?: string | undefined;
  ErrorCode?: string | undefined;
  ErrorMessage?: string | undefined;
}
export interface BatchGetPreparedStatementOutput {
  PreparedStatements?: PreparedStatement[] | undefined;
  UnprocessedPreparedStatementNames?:
    | UnprocessedPreparedStatementName[]
    | undefined;
}
export interface BatchGetQueryExecutionInput {
  QueryExecutionIds: string[] | undefined;
}
export interface EngineVersion {
  SelectedEngineVersion?: string | undefined;
  EffectiveEngineVersion?: string | undefined;
}
export interface ManagedQueryResultsEncryptionConfiguration {
  KmsKey: string | undefined;
}
export interface ManagedQueryResultsConfiguration {
  Enabled: boolean | undefined;
  EncryptionConfiguration?:
    | ManagedQueryResultsEncryptionConfiguration
    | undefined;
}
export interface QueryExecutionContext {
  Database?: string | undefined;
  Catalog?: string | undefined;
}
export declare const AuthenticationType: {
  readonly DIRECTORY_IDENTITY: "DIRECTORY_IDENTITY";
};
export type AuthenticationType =
  (typeof AuthenticationType)[keyof typeof AuthenticationType];
export interface QueryResultsS3AccessGrantsConfiguration {
  EnableS3AccessGrants: boolean | undefined;
  CreateUserLevelPrefix?: boolean | undefined;
  AuthenticationType: AuthenticationType | undefined;
}
export declare const EncryptionOption: {
  readonly CSE_KMS: "CSE_KMS";
  readonly SSE_KMS: "SSE_KMS";
  readonly SSE_S3: "SSE_S3";
};
export type EncryptionOption =
  (typeof EncryptionOption)[keyof typeof EncryptionOption];
export interface EncryptionConfiguration {
  EncryptionOption: EncryptionOption | undefined;
  KmsKey?: string | undefined;
}
export interface ResultConfiguration {
  OutputLocation?: string | undefined;
  EncryptionConfiguration?: EncryptionConfiguration | undefined;
  ExpectedBucketOwner?: string | undefined;
  AclConfiguration?: AclConfiguration | undefined;
}
export interface ResultReuseByAgeConfiguration {
  Enabled: boolean | undefined;
  MaxAgeInMinutes?: number | undefined;
}
export interface ResultReuseConfiguration {
  ResultReuseByAgeConfiguration?: ResultReuseByAgeConfiguration | undefined;
}
export declare const StatementType: {
  readonly DDL: "DDL";
  readonly DML: "DML";
  readonly UTILITY: "UTILITY";
};
export type StatementType = (typeof StatementType)[keyof typeof StatementType];
export interface ResultReuseInformation {
  ReusedPreviousResult: boolean | undefined;
}
export interface QueryExecutionStatistics {
  EngineExecutionTimeInMillis?: number | undefined;
  DataScannedInBytes?: number | undefined;
  DataManifestLocation?: string | undefined;
  TotalExecutionTimeInMillis?: number | undefined;
  QueryQueueTimeInMillis?: number | undefined;
  ServicePreProcessingTimeInMillis?: number | undefined;
  QueryPlanningTimeInMillis?: number | undefined;
  ServiceProcessingTimeInMillis?: number | undefined;
  ResultReuseInformation?: ResultReuseInformation | undefined;
}
export interface AthenaError {
  ErrorCategory?: number | undefined;
  ErrorType?: number | undefined;
  Retryable?: boolean | undefined;
  ErrorMessage?: string | undefined;
}
export declare const QueryExecutionState: {
  readonly CANCELLED: "CANCELLED";
  readonly FAILED: "FAILED";
  readonly QUEUED: "QUEUED";
  readonly RUNNING: "RUNNING";
  readonly SUCCEEDED: "SUCCEEDED";
};
export type QueryExecutionState =
  (typeof QueryExecutionState)[keyof typeof QueryExecutionState];
export interface QueryExecutionStatus {
  State?: QueryExecutionState | undefined;
  StateChangeReason?: string | undefined;
  SubmissionDateTime?: Date | undefined;
  CompletionDateTime?: Date | undefined;
  AthenaError?: AthenaError | undefined;
}
export interface QueryExecution {
  QueryExecutionId?: string | undefined;
  Query?: string | undefined;
  StatementType?: StatementType | undefined;
  ManagedQueryResultsConfiguration?:
    | ManagedQueryResultsConfiguration
    | undefined;
  ResultConfiguration?: ResultConfiguration | undefined;
  ResultReuseConfiguration?: ResultReuseConfiguration | undefined;
  QueryExecutionContext?: QueryExecutionContext | undefined;
  Status?: QueryExecutionStatus | undefined;
  Statistics?: QueryExecutionStatistics | undefined;
  WorkGroup?: string | undefined;
  EngineVersion?: EngineVersion | undefined;
  ExecutionParameters?: string[] | undefined;
  SubstatementType?: string | undefined;
  QueryResultsS3AccessGrantsConfiguration?:
    | QueryResultsS3AccessGrantsConfiguration
    | undefined;
}
export interface UnprocessedQueryExecutionId {
  QueryExecutionId?: string | undefined;
  ErrorCode?: string | undefined;
  ErrorMessage?: string | undefined;
}
export interface BatchGetQueryExecutionOutput {
  QueryExecutions?: QueryExecution[] | undefined;
  UnprocessedQueryExecutionIds?: UnprocessedQueryExecutionId[] | undefined;
}
export interface CancelCapacityReservationInput {
  Name: string | undefined;
}
export interface CancelCapacityReservationOutput {}
export interface Tag {
  Key?: string | undefined;
  Value?: string | undefined;
}
export interface CreateCapacityReservationInput {
  TargetDpus: number | undefined;
  Name: string | undefined;
  Tags?: Tag[] | undefined;
}
export interface CreateCapacityReservationOutput {}
export declare const DataCatalogType: {
  readonly FEDERATED: "FEDERATED";
  readonly GLUE: "GLUE";
  readonly HIVE: "HIVE";
  readonly LAMBDA: "LAMBDA";
};
export type DataCatalogType =
  (typeof DataCatalogType)[keyof typeof DataCatalogType];
export interface CreateDataCatalogInput {
  Name: string | undefined;
  Type: DataCatalogType | undefined;
  Description?: string | undefined;
  Parameters?: Record<string, string> | undefined;
  Tags?: Tag[] | undefined;
}
export declare const ConnectionType: {
  readonly BIGQUERY: "BIGQUERY";
  readonly CMDB: "CMDB";
  readonly DATALAKEGEN2: "DATALAKEGEN2";
  readonly DB2: "DB2";
  readonly DB2AS400: "DB2AS400";
  readonly DOCUMENTDB: "DOCUMENTDB";
  readonly DYNAMODB: "DYNAMODB";
  readonly GOOGLECLOUDSTORAGE: "GOOGLECLOUDSTORAGE";
  readonly HBASE: "HBASE";
  readonly MYSQL: "MYSQL";
  readonly OPENSEARCH: "OPENSEARCH";
  readonly ORACLE: "ORACLE";
  readonly POSTGRESQL: "POSTGRESQL";
  readonly REDSHIFT: "REDSHIFT";
  readonly SAPHANA: "SAPHANA";
  readonly SNOWFLAKE: "SNOWFLAKE";
  readonly SQLSERVER: "SQLSERVER";
  readonly SYNAPSE: "SYNAPSE";
  readonly TIMESTREAM: "TIMESTREAM";
  readonly TPCDS: "TPCDS";
};
export type ConnectionType =
  (typeof ConnectionType)[keyof typeof ConnectionType];
export declare const DataCatalogStatus: {
  readonly CREATE_COMPLETE: "CREATE_COMPLETE";
  readonly CREATE_FAILED: "CREATE_FAILED";
  readonly CREATE_FAILED_CLEANUP_COMPLETE: "CREATE_FAILED_CLEANUP_COMPLETE";
  readonly CREATE_FAILED_CLEANUP_FAILED: "CREATE_FAILED_CLEANUP_FAILED";
  readonly CREATE_FAILED_CLEANUP_IN_PROGRESS: "CREATE_FAILED_CLEANUP_IN_PROGRESS";
  readonly CREATE_IN_PROGRESS: "CREATE_IN_PROGRESS";
  readonly DELETE_COMPLETE: "DELETE_COMPLETE";
  readonly DELETE_FAILED: "DELETE_FAILED";
  readonly DELETE_IN_PROGRESS: "DELETE_IN_PROGRESS";
};
export type DataCatalogStatus =
  (typeof DataCatalogStatus)[keyof typeof DataCatalogStatus];
export interface DataCatalog {
  Name: string | undefined;
  Description?: string | undefined;
  Type: DataCatalogType | undefined;
  Parameters?: Record<string, string> | undefined;
  Status?: DataCatalogStatus | undefined;
  ConnectionType?: ConnectionType | undefined;
  Error?: string | undefined;
}
export interface CreateDataCatalogOutput {
  DataCatalog?: DataCatalog | undefined;
}
export interface CreateNamedQueryInput {
  Name: string | undefined;
  Description?: string | undefined;
  Database: string | undefined;
  QueryString: string | undefined;
  ClientRequestToken?: string | undefined;
  WorkGroup?: string | undefined;
}
export interface CreateNamedQueryOutput {
  NamedQueryId?: string | undefined;
}
export interface CreateNotebookInput {
  WorkGroup: string | undefined;
  Name: string | undefined;
  ClientRequestToken?: string | undefined;
}
export interface CreateNotebookOutput {
  NotebookId?: string | undefined;
}
export declare const ThrottleReason: {
  readonly CONCURRENT_QUERY_LIMIT_EXCEEDED: "CONCURRENT_QUERY_LIMIT_EXCEEDED";
};
export type ThrottleReason =
  (typeof ThrottleReason)[keyof typeof ThrottleReason];
export declare class TooManyRequestsException extends __BaseException {
  readonly name: "TooManyRequestsException";
  readonly $fault: "client";
  Message?: string | undefined;
  Reason?: ThrottleReason | undefined;
  constructor(
    opts: __ExceptionOptionType<TooManyRequestsException, __BaseException>
  );
}
export interface CreatePreparedStatementInput {
  StatementName: string | undefined;
  WorkGroup: string | undefined;
  QueryStatement: string | undefined;
  Description?: string | undefined;
}
export interface CreatePreparedStatementOutput {}
export interface CreatePresignedNotebookUrlRequest {
  SessionId: string | undefined;
}
export interface CreatePresignedNotebookUrlResponse {
  NotebookUrl: string | undefined;
  AuthToken: string | undefined;
  AuthTokenExpirationTime: number | undefined;
}
export declare class ResourceNotFoundException extends __BaseException {
  readonly name: "ResourceNotFoundException";
  readonly $fault: "client";
  Message?: string | undefined;
  ResourceName?: string | undefined;
  constructor(
    opts: __ExceptionOptionType<ResourceNotFoundException, __BaseException>
  );
}
export interface CustomerContentEncryptionConfiguration {
  KmsKey: string | undefined;
}
export interface IdentityCenterConfiguration {
  EnableIdentityCenter?: boolean | undefined;
  IdentityCenterInstanceArn?: string | undefined;
}
export interface WorkGroupConfiguration {
  ResultConfiguration?: ResultConfiguration | undefined;
  ManagedQueryResultsConfiguration?:
    | ManagedQueryResultsConfiguration
    | undefined;
  EnforceWorkGroupConfiguration?: boolean | undefined;
  PublishCloudWatchMetricsEnabled?: boolean | undefined;
  BytesScannedCutoffPerQuery?: number | undefined;
  RequesterPaysEnabled?: boolean | undefined;
  EngineVersion?: EngineVersion | undefined;
  AdditionalConfiguration?: string | undefined;
  ExecutionRole?: string | undefined;
  CustomerContentEncryptionConfiguration?:
    | CustomerContentEncryptionConfiguration
    | undefined;
  EnableMinimumEncryptionConfiguration?: boolean | undefined;
  IdentityCenterConfiguration?: IdentityCenterConfiguration | undefined;
  QueryResultsS3AccessGrantsConfiguration?:
    | QueryResultsS3AccessGrantsConfiguration
    | undefined;
}
export interface CreateWorkGroupInput {
  Name: string | undefined;
  Configuration?: WorkGroupConfiguration | undefined;
  Description?: string | undefined;
  Tags?: Tag[] | undefined;
}
export interface CreateWorkGroupOutput {}
export interface DeleteCapacityReservationInput {
  Name: string | undefined;
}
export interface DeleteCapacityReservationOutput {}
export interface DeleteDataCatalogInput {
  Name: string | undefined;
  DeleteCatalogOnly?: boolean | undefined;
}
export interface DeleteDataCatalogOutput {
  DataCatalog?: DataCatalog | undefined;
}
export interface DeleteNamedQueryInput {
  NamedQueryId?: string | undefined;
}
export interface DeleteNamedQueryOutput {}
export interface DeleteNotebookInput {
  NotebookId: string | undefined;
}
export interface DeleteNotebookOutput {}
export interface DeletePreparedStatementInput {
  StatementName: string | undefined;
  WorkGroup: string | undefined;
}
export interface DeletePreparedStatementOutput {}
export interface DeleteWorkGroupInput {
  WorkGroup: string | undefined;
  RecursiveDeleteOption?: boolean | undefined;
}
export interface DeleteWorkGroupOutput {}
export interface ExportNotebookInput {
  NotebookId: string | undefined;
}
export declare const NotebookType: {
  readonly IPYNB: "IPYNB";
};
export type NotebookType = (typeof NotebookType)[keyof typeof NotebookType];
export interface NotebookMetadata {
  NotebookId?: string | undefined;
  Name?: string | undefined;
  WorkGroup?: string | undefined;
  CreationTime?: Date | undefined;
  Type?: NotebookType | undefined;
  LastModifiedTime?: Date | undefined;
}
export interface ExportNotebookOutput {
  NotebookMetadata?: NotebookMetadata | undefined;
  Payload?: string | undefined;
}
export interface GetCalculationExecutionRequest {
  CalculationExecutionId: string | undefined;
}
export interface CalculationResult {
  StdOutS3Uri?: string | undefined;
  StdErrorS3Uri?: string | undefined;
  ResultS3Uri?: string | undefined;
  ResultType?: string | undefined;
}
export interface CalculationStatistics {
  DpuExecutionInMillis?: number | undefined;
  Progress?: string | undefined;
}
export declare const CalculationExecutionState: {
  readonly CANCELED: "CANCELED";
  readonly CANCELING: "CANCELING";
  readonly COMPLETED: "COMPLETED";
  readonly CREATED: "CREATED";
  readonly CREATING: "CREATING";
  readonly FAILED: "FAILED";
  readonly QUEUED: "QUEUED";
  readonly RUNNING: "RUNNING";
};
export type CalculationExecutionState =
  (typeof CalculationExecutionState)[keyof typeof CalculationExecutionState];
export interface CalculationStatus {
  SubmissionDateTime?: Date | undefined;
  CompletionDateTime?: Date | undefined;
  State?: CalculationExecutionState | undefined;
  StateChangeReason?: string | undefined;
}
export interface GetCalculationExecutionResponse {
  CalculationExecutionId?: string | undefined;
  SessionId?: string | undefined;
  Description?: string | undefined;
  WorkingDirectory?: string | undefined;
  Status?: CalculationStatus | undefined;
  Statistics?: CalculationStatistics | undefined;
  Result?: CalculationResult | undefined;
}
export interface GetCalculationExecutionCodeRequest {
  CalculationExecutionId: string | undefined;
}
export interface GetCalculationExecutionCodeResponse {
  CodeBlock?: string | undefined;
}
export interface GetCalculationExecutionStatusRequest {
  CalculationExecutionId: string | undefined;
}
export interface GetCalculationExecutionStatusResponse {
  Status?: CalculationStatus | undefined;
  Statistics?: CalculationStatistics | undefined;
}
export interface GetCapacityAssignmentConfigurationInput {
  CapacityReservationName: string | undefined;
}
export interface CapacityAssignment {
  WorkGroupNames?: string[] | undefined;
}
export interface CapacityAssignmentConfiguration {
  CapacityReservationName?: string | undefined;
  CapacityAssignments?: CapacityAssignment[] | undefined;
}
export interface GetCapacityAssignmentConfigurationOutput {
  CapacityAssignmentConfiguration: CapacityAssignmentConfiguration | undefined;
}
export interface GetCapacityReservationInput {
  Name: string | undefined;
}
export declare const CapacityAllocationStatus: {
  readonly FAILED: "FAILED";
  readonly PENDING: "PENDING";
  readonly SUCCEEDED: "SUCCEEDED";
};
export type CapacityAllocationStatus =
  (typeof CapacityAllocationStatus)[keyof typeof CapacityAllocationStatus];
export interface CapacityAllocation {
  Status: CapacityAllocationStatus | undefined;
  StatusMessage?: string | undefined;
  RequestTime: Date | undefined;
  RequestCompletionTime?: Date | undefined;
}
export declare const CapacityReservationStatus: {
  readonly ACTIVE: "ACTIVE";
  readonly CANCELLED: "CANCELLED";
  readonly CANCELLING: "CANCELLING";
  readonly FAILED: "FAILED";
  readonly PENDING: "PENDING";
  readonly UPDATE_PENDING: "UPDATE_PENDING";
};
export type CapacityReservationStatus =
  (typeof CapacityReservationStatus)[keyof typeof CapacityReservationStatus];
export interface CapacityReservation {
  Name: string | undefined;
  Status: CapacityReservationStatus | undefined;
  TargetDpus: number | undefined;
  AllocatedDpus: number | undefined;
  LastAllocation?: CapacityAllocation | undefined;
  LastSuccessfulAllocationTime?: Date | undefined;
  CreationTime: Date | undefined;
}
export interface GetCapacityReservationOutput {
  CapacityReservation: CapacityReservation | undefined;
}
export interface GetDatabaseInput {
  CatalogName: string | undefined;
  DatabaseName: string | undefined;
  WorkGroup?: string | undefined;
}
export interface Database {
  Name: string | undefined;
  Description?: string | undefined;
  Parameters?: Record<string, string> | undefined;
}
export interface GetDatabaseOutput {
  Database?: Database | undefined;
}
export declare class MetadataException extends __BaseException {
  readonly name: "MetadataException";
  readonly $fault: "client";
  Message?: string | undefined;
  constructor(opts: __ExceptionOptionType<MetadataException, __BaseException>);
}
export interface GetDataCatalogInput {
  Name: string | undefined;
  WorkGroup?: string | undefined;
}
export interface GetDataCatalogOutput {
  DataCatalog?: DataCatalog | undefined;
}
export interface GetNamedQueryInput {
  NamedQueryId: string | undefined;
}
export interface GetNamedQueryOutput {
  NamedQuery?: NamedQuery | undefined;
}
export interface GetNotebookMetadataInput {
  NotebookId: string | undefined;
}
export interface GetNotebookMetadataOutput {
  NotebookMetadata?: NotebookMetadata | undefined;
}
export interface GetPreparedStatementInput {
  StatementName: string | undefined;
  WorkGroup: string | undefined;
}
export interface GetPreparedStatementOutput {
  PreparedStatement?: PreparedStatement | undefined;
}
export interface GetQueryExecutionInput {
  QueryExecutionId: string | undefined;
}
export interface GetQueryExecutionOutput {
  QueryExecution?: QueryExecution | undefined;
}
export declare const QueryResultType: {
  readonly DATA_MANIFEST: "DATA_MANIFEST";
  readonly DATA_ROWS: "DATA_ROWS";
};
export type QueryResultType =
  (typeof QueryResultType)[keyof typeof QueryResultType];
export interface GetQueryResultsInput {
  QueryExecutionId: string | undefined;
  NextToken?: string | undefined;
  MaxResults?: number | undefined;
  QueryResultType?: QueryResultType | undefined;
}
export declare const ColumnNullable: {
  readonly NOT_NULL: "NOT_NULL";
  readonly NULLABLE: "NULLABLE";
  readonly UNKNOWN: "UNKNOWN";
};
export type ColumnNullable =
  (typeof ColumnNullable)[keyof typeof ColumnNullable];
export interface ColumnInfo {
  CatalogName?: string | undefined;
  SchemaName?: string | undefined;
  TableName?: string | undefined;
  Name: string | undefined;
  Label?: string | undefined;
  Type: string | undefined;
  Precision?: number | undefined;
  Scale?: number | undefined;
  Nullable?: ColumnNullable | undefined;
  CaseSensitive?: boolean | undefined;
}
export interface ResultSetMetadata {
  ColumnInfo?: ColumnInfo[] | undefined;
}
export interface Datum {
  VarCharValue?: string | undefined;
}
export interface Row {
  Data?: Datum[] | undefined;
}
export interface ResultSet {
  Rows?: Row[] | undefined;
  ResultSetMetadata?: ResultSetMetadata | undefined;
}
export interface GetQueryResultsOutput {
  UpdateCount?: number | undefined;
  ResultSet?: ResultSet | undefined;
  NextToken?: string | undefined;
}
export interface GetQueryRuntimeStatisticsInput {
  QueryExecutionId: string | undefined;
}
export interface QueryRuntimeStatisticsRows {
  InputRows?: number | undefined;
  InputBytes?: number | undefined;
  OutputBytes?: number | undefined;
  OutputRows?: number | undefined;
}
export interface QueryRuntimeStatisticsTimeline {
  QueryQueueTimeInMillis?: number | undefined;
  ServicePreProcessingTimeInMillis?: number | undefined;
  QueryPlanningTimeInMillis?: number | undefined;
  EngineExecutionTimeInMillis?: number | undefined;
  ServiceProcessingTimeInMillis?: number | undefined;
  TotalExecutionTimeInMillis?: number | undefined;
}
export interface GetSessionRequest {
  SessionId: string | undefined;
}
export interface EngineConfiguration {
  CoordinatorDpuSize?: number | undefined;
  MaxConcurrentDpus: number | undefined;
  DefaultExecutorDpuSize?: number | undefined;
  AdditionalConfigs?: Record<string, string> | undefined;
  SparkProperties?: Record<string, string> | undefined;
}
export interface SessionConfiguration {
  ExecutionRole?: string | undefined;
  WorkingDirectory?: string | undefined;
  IdleTimeoutSeconds?: number | undefined;
  EncryptionConfiguration?: EncryptionConfiguration | undefined;
}
export interface SessionStatistics {
  DpuExecutionInMillis?: number | undefined;
}
export declare const SessionState: {
  readonly BUSY: "BUSY";
  readonly CREATED: "CREATED";
  readonly CREATING: "CREATING";
  readonly DEGRADED: "DEGRADED";
  readonly FAILED: "FAILED";
  readonly IDLE: "IDLE";
  readonly TERMINATED: "TERMINATED";
  readonly TERMINATING: "TERMINATING";
};
export type SessionState = (typeof SessionState)[keyof typeof SessionState];
export interface SessionStatus {
  StartDateTime?: Date | undefined;
  LastModifiedDateTime?: Date | undefined;
  EndDateTime?: Date | undefined;
  IdleSinceDateTime?: Date | undefined;
  State?: SessionState | undefined;
  StateChangeReason?: string | undefined;
}
export interface GetSessionResponse {
  SessionId?: string | undefined;
  Description?: string | undefined;
  WorkGroup?: string | undefined;
  EngineVersion?: string | undefined;
  EngineConfiguration?: EngineConfiguration | undefined;
  NotebookVersion?: string | undefined;
  SessionConfiguration?: SessionConfiguration | undefined;
  Status?: SessionStatus | undefined;
  Statistics?: SessionStatistics | undefined;
}
export interface GetSessionStatusRequest {
  SessionId: string | undefined;
}
export interface GetSessionStatusResponse {
  SessionId?: string | undefined;
  Status?: SessionStatus | undefined;
}
export interface GetTableMetadataInput {
  CatalogName: string | undefined;
  DatabaseName: string | undefined;
  TableName: string | undefined;
  WorkGroup?: string | undefined;
}
export interface Column {
  Name: string | undefined;
  Type?: string | undefined;
  Comment?: string | undefined;
}
export interface TableMetadata {
  Name: string | undefined;
  CreateTime?: Date | undefined;
  LastAccessTime?: Date | undefined;
  TableType?: string | undefined;
  Columns?: Column[] | undefined;
  PartitionKeys?: Column[] | undefined;
  Parameters?: Record<string, string> | undefined;
}
export interface GetTableMetadataOutput {
  TableMetadata?: TableMetadata | undefined;
}
export interface GetWorkGroupInput {
  WorkGroup: string | undefined;
}
export declare const WorkGroupState: {
  readonly DISABLED: "DISABLED";
  readonly ENABLED: "ENABLED";
};
export type WorkGroupState =
  (typeof WorkGroupState)[keyof typeof WorkGroupState];
export interface WorkGroup {
  Name: string | undefined;
  State?: WorkGroupState | undefined;
  Configuration?: WorkGroupConfiguration | undefined;
  Description?: string | undefined;
  CreationTime?: Date | undefined;
  IdentityCenterApplicationArn?: string | undefined;
}
export interface GetWorkGroupOutput {
  WorkGroup?: WorkGroup | undefined;
}
export interface ImportNotebookInput {
  WorkGroup: string | undefined;
  Name: string | undefined;
  Payload?: string | undefined;
  Type: NotebookType | undefined;
  NotebookS3LocationUri?: string | undefined;
  ClientRequestToken?: string | undefined;
}
export interface ImportNotebookOutput {
  NotebookId?: string | undefined;
}
export interface ListApplicationDPUSizesInput {
  MaxResults?: number | undefined;
  NextToken?: string | undefined;
}
export interface ApplicationDPUSizes {
  ApplicationRuntimeId?: string | undefined;
  SupportedDPUSizes?: number[] | undefined;
}
export interface ListApplicationDPUSizesOutput {
  ApplicationDPUSizes?: ApplicationDPUSizes[] | undefined;
  NextToken?: string | undefined;
}
export interface ListCalculationExecutionsRequest {
  SessionId: string | undefined;
  StateFilter?: CalculationExecutionState | undefined;
  MaxResults?: number | undefined;
  NextToken?: string | undefined;
}
export interface CalculationSummary {
  CalculationExecutionId?: string | undefined;
  Description?: string | undefined;
  Status?: CalculationStatus | undefined;
}
export interface ListCalculationExecutionsResponse {
  NextToken?: string | undefined;
  Calculations?: CalculationSummary[] | undefined;
}
export interface ListCapacityReservationsInput {
  NextToken?: string | undefined;
  MaxResults?: number | undefined;
}
export interface ListCapacityReservationsOutput {
  NextToken?: string | undefined;
  CapacityReservations: CapacityReservation[] | undefined;
}
export interface ListDatabasesInput {
  CatalogName: string | undefined;
  NextToken?: string | undefined;
  MaxResults?: number | undefined;
  WorkGroup?: string | undefined;
}
export interface ListDatabasesOutput {
  DatabaseList?: Database[] | undefined;
  NextToken?: string | undefined;
}
export interface ListDataCatalogsInput {
  NextToken?: string | undefined;
  MaxResults?: number | undefined;
  WorkGroup?: string | undefined;
}
export interface DataCatalogSummary {
  CatalogName?: string | undefined;
  Type?: DataCatalogType | undefined;
  Status?: DataCatalogStatus | undefined;
  ConnectionType?: ConnectionType | undefined;
  Error?: string | undefined;
}
export interface ListDataCatalogsOutput {
  DataCatalogsSummary?: DataCatalogSummary[] | undefined;
  NextToken?: string | undefined;
}
export interface ListEngineVersionsInput {
  NextToken?: string | undefined;
  MaxResults?: number | undefined;
}
export interface ListEngineVersionsOutput {
  EngineVersions?: EngineVersion[] | undefined;
  NextToken?: string | undefined;
}
export declare const ExecutorState: {
  readonly CREATED: "CREATED";
  readonly CREATING: "CREATING";
  readonly FAILED: "FAILED";
  readonly REGISTERED: "REGISTERED";
  readonly TERMINATED: "TERMINATED";
  readonly TERMINATING: "TERMINATING";
};
export type ExecutorState = (typeof ExecutorState)[keyof typeof ExecutorState];
export interface ListExecutorsRequest {
  SessionId: string | undefined;
  ExecutorStateFilter?: ExecutorState | undefined;
  MaxResults?: number | undefined;
  NextToken?: string | undefined;
}
export declare const ExecutorType: {
  readonly COORDINATOR: "COORDINATOR";
  readonly GATEWAY: "GATEWAY";
  readonly WORKER: "WORKER";
};
export type ExecutorType = (typeof ExecutorType)[keyof typeof ExecutorType];
export interface ExecutorsSummary {
  ExecutorId: string | undefined;
  ExecutorType?: ExecutorType | undefined;
  StartDateTime?: number | undefined;
  TerminationDateTime?: number | undefined;
  ExecutorState?: ExecutorState | undefined;
  ExecutorSize?: number | undefined;
}
export interface ListExecutorsResponse {
  SessionId: string | undefined;
  NextToken?: string | undefined;
  ExecutorsSummary?: ExecutorsSummary[] | undefined;
}
export interface ListNamedQueriesInput {
  NextToken?: string | undefined;
  MaxResults?: number | undefined;
  WorkGroup?: string | undefined;
}
export interface ListNamedQueriesOutput {
  NamedQueryIds?: string[] | undefined;
  NextToken?: string | undefined;
}
export interface FilterDefinition {
  Name?: string | undefined;
}
export interface ListNotebookMetadataInput {
  Filters?: FilterDefinition | undefined;
  NextToken?: string | undefined;
  MaxResults?: number | undefined;
  WorkGroup: string | undefined;
}
export interface ListNotebookMetadataOutput {
  NextToken?: string | undefined;
  NotebookMetadataList?: NotebookMetadata[] | undefined;
}
export interface ListNotebookSessionsRequest {
  NotebookId: string | undefined;
  MaxResults?: number | undefined;
  NextToken?: string | undefined;
}
export interface NotebookSessionSummary {
  SessionId?: string | undefined;
  CreationTime?: Date | undefined;
}
export interface ListNotebookSessionsResponse {
  NotebookSessionsList: NotebookSessionSummary[] | undefined;
  NextToken?: string | undefined;
}
export interface ListPreparedStatementsInput {
  WorkGroup: string | undefined;
  NextToken?: string | undefined;
  MaxResults?: number | undefined;
}
export interface PreparedStatementSummary {
  StatementName?: string | undefined;
  LastModifiedTime?: Date | undefined;
}
export interface ListPreparedStatementsOutput {
  PreparedStatements?: PreparedStatementSummary[] | undefined;
  NextToken?: string | undefined;
}
export interface ListQueryExecutionsInput {
  NextToken?: string | undefined;
  MaxResults?: number | undefined;
  WorkGroup?: string | undefined;
}
export interface ListQueryExecutionsOutput {
  QueryExecutionIds?: string[] | undefined;
  NextToken?: string | undefined;
}
export interface ListSessionsRequest {
  WorkGroup: string | undefined;
  StateFilter?: SessionState | undefined;
  MaxResults?: number | undefined;
  NextToken?: string | undefined;
}
export interface SessionSummary {
  SessionId?: string | undefined;
  Description?: string | undefined;
  EngineVersion?: EngineVersion | undefined;
  NotebookVersion?: string | undefined;
  Status?: SessionStatus | undefined;
}
export interface ListSessionsResponse {
  NextToken?: string | undefined;
  Sessions?: SessionSummary[] | undefined;
}
export interface ListTableMetadataInput {
  CatalogName: string | undefined;
  DatabaseName: string | undefined;
  Expression?: string | undefined;
  NextToken?: string | undefined;
  MaxResults?: number | undefined;
  WorkGroup?: string | undefined;
}
export interface ListTableMetadataOutput {
  TableMetadataList?: TableMetadata[] | undefined;
  NextToken?: string | undefined;
}
export interface ListTagsForResourceInput {
  ResourceARN: string | undefined;
  NextToken?: string | undefined;
  MaxResults?: number | undefined;
}
export interface ListTagsForResourceOutput {
  Tags?: Tag[] | undefined;
  NextToken?: string | undefined;
}
export interface ListWorkGroupsInput {
  NextToken?: string | undefined;
  MaxResults?: number | undefined;
}
export interface WorkGroupSummary {
  Name?: string | undefined;
  State?: WorkGroupState | undefined;
  Description?: string | undefined;
  CreationTime?: Date | undefined;
  EngineVersion?: EngineVersion | undefined;
  IdentityCenterApplicationArn?: string | undefined;
}
export interface ListWorkGroupsOutput {
  WorkGroups?: WorkGroupSummary[] | undefined;
  NextToken?: string | undefined;
}
export interface PutCapacityAssignmentConfigurationInput {
  CapacityReservationName: string | undefined;
  CapacityAssignments: CapacityAssignment[] | undefined;
}
export interface PutCapacityAssignmentConfigurationOutput {}
export interface CalculationConfiguration {
  CodeBlock?: string | undefined;
}
export interface StartCalculationExecutionRequest {
  SessionId: string | undefined;
  Description?: string | undefined;
  CalculationConfiguration?: CalculationConfiguration | undefined;
  CodeBlock?: string | undefined;
  ClientRequestToken?: string | undefined;
}
export interface StartCalculationExecutionResponse {
  CalculationExecutionId?: string | undefined;
  State?: CalculationExecutionState | undefined;
}
export interface StartQueryExecutionInput {
  QueryString: string | undefined;
  ClientRequestToken?: string | undefined;
  QueryExecutionContext?: QueryExecutionContext | undefined;
  ResultConfiguration?: ResultConfiguration | undefined;
  WorkGroup?: string | undefined;
  ExecutionParameters?: string[] | undefined;
  ResultReuseConfiguration?: ResultReuseConfiguration | undefined;
}
export interface StartQueryExecutionOutput {
  QueryExecutionId?: string | undefined;
}
export declare class SessionAlreadyExistsException extends __BaseException {
  readonly name: "SessionAlreadyExistsException";
  readonly $fault: "client";
  Message?: string | undefined;
  constructor(
    opts: __ExceptionOptionType<SessionAlreadyExistsException, __BaseException>
  );
}
export interface StartSessionRequest {
  Description?: string | undefined;
  WorkGroup: string | undefined;
  EngineConfiguration: EngineConfiguration | undefined;
  NotebookVersion?: string | undefined;
  SessionIdleTimeoutInMinutes?: number | undefined;
  ClientRequestToken?: string | undefined;
}
export interface StartSessionResponse {
  SessionId?: string | undefined;
  State?: SessionState | undefined;
}
export interface StopCalculationExecutionRequest {
  CalculationExecutionId: string | undefined;
}
export interface StopCalculationExecutionResponse {
  State?: CalculationExecutionState | undefined;
}
export interface StopQueryExecutionInput {
  QueryExecutionId?: string | undefined;
}
export interface StopQueryExecutionOutput {}
export interface TagResourceInput {
  ResourceARN: string | undefined;
  Tags: Tag[] | undefined;
}
export interface TagResourceOutput {}
export interface TerminateSessionRequest {
  SessionId: string | undefined;
}
export interface TerminateSessionResponse {
  State?: SessionState | undefined;
}
export interface UntagResourceInput {
  ResourceARN: string | undefined;
  TagKeys: string[] | undefined;
}
export interface UntagResourceOutput {}
export interface UpdateCapacityReservationInput {
  TargetDpus: number | undefined;
  Name: string | undefined;
}
export interface UpdateCapacityReservationOutput {}
export interface UpdateDataCatalogInput {
  Name: string | undefined;
  Type: DataCatalogType | undefined;
  Description?: string | undefined;
  Parameters?: Record<string, string> | undefined;
}
export interface UpdateDataCatalogOutput {}
export interface UpdateNamedQueryInput {
  NamedQueryId: string | undefined;
  Name: string | undefined;
  Description?: string | undefined;
  QueryString: string | undefined;
}
export interface UpdateNamedQueryOutput {}
export interface UpdateNotebookInput {
  NotebookId: string | undefined;
  Payload: string | undefined;
  Type: NotebookType | undefined;
  SessionId?: string | undefined;
  ClientRequestToken?: string | undefined;
}
export interface UpdateNotebookOutput {}
export interface UpdateNotebookMetadataInput {
  NotebookId: string | undefined;
  ClientRequestToken?: string | undefined;
  Name: string | undefined;
}
export interface UpdateNotebookMetadataOutput {}
export interface UpdatePreparedStatementInput {
  StatementName: string | undefined;
  WorkGroup: string | undefined;
  QueryStatement: string | undefined;
  Description?: string | undefined;
}
export interface UpdatePreparedStatementOutput {}
export interface ManagedQueryResultsConfigurationUpdates {
  Enabled?: boolean | undefined;
  EncryptionConfiguration?:
    | ManagedQueryResultsEncryptionConfiguration
    | undefined;
  RemoveEncryptionConfiguration?: boolean | undefined;
}
export interface ResultConfigurationUpdates {
  OutputLocation?: string | undefined;
  RemoveOutputLocation?: boolean | undefined;
  EncryptionConfiguration?: EncryptionConfiguration | undefined;
  RemoveEncryptionConfiguration?: boolean | undefined;
  ExpectedBucketOwner?: string | undefined;
  RemoveExpectedBucketOwner?: boolean | undefined;
  AclConfiguration?: AclConfiguration | undefined;
  RemoveAclConfiguration?: boolean | undefined;
}
export interface WorkGroupConfigurationUpdates {
  EnforceWorkGroupConfiguration?: boolean | undefined;
  ResultConfigurationUpdates?: ResultConfigurationUpdates | undefined;
  ManagedQueryResultsConfigurationUpdates?:
    | ManagedQueryResultsConfigurationUpdates
    | undefined;
  PublishCloudWatchMetricsEnabled?: boolean | undefined;
  BytesScannedCutoffPerQuery?: number | undefined;
  RemoveBytesScannedCutoffPerQuery?: boolean | undefined;
  RequesterPaysEnabled?: boolean | undefined;
  EngineVersion?: EngineVersion | undefined;
  RemoveCustomerContentEncryptionConfiguration?: boolean | undefined;
  AdditionalConfiguration?: string | undefined;
  ExecutionRole?: string | undefined;
  CustomerContentEncryptionConfiguration?:
    | CustomerContentEncryptionConfiguration
    | undefined;
  EnableMinimumEncryptionConfiguration?: boolean | undefined;
  QueryResultsS3AccessGrantsConfiguration?:
    | QueryResultsS3AccessGrantsConfiguration
    | undefined;
}
export interface UpdateWorkGroupInput {
  WorkGroup: string | undefined;
  Description?: string | undefined;
  ConfigurationUpdates?: WorkGroupConfigurationUpdates | undefined;
  State?: WorkGroupState | undefined;
}
export interface UpdateWorkGroupOutput {}
export interface QueryStagePlanNode {
  Name?: string | undefined;
  Identifier?: string | undefined;
  Children?: QueryStagePlanNode[] | undefined;
  RemoteSources?: string[] | undefined;
}
export interface QueryStage {
  StageId?: number | undefined;
  State?: string | undefined;
  OutputBytes?: number | undefined;
  OutputRows?: number | undefined;
  InputBytes?: number | undefined;
  InputRows?: number | undefined;
  ExecutionTime?: number | undefined;
  QueryStagePlan?: QueryStagePlanNode | undefined;
  SubStages?: QueryStage[] | undefined;
}
export interface QueryRuntimeStatistics {
  Timeline?: QueryRuntimeStatisticsTimeline | undefined;
  Rows?: QueryRuntimeStatisticsRows | undefined;
  OutputStage?: QueryStage | undefined;
}
export interface GetQueryRuntimeStatisticsOutput {
  QueryRuntimeStatistics?: QueryRuntimeStatistics | undefined;
}
